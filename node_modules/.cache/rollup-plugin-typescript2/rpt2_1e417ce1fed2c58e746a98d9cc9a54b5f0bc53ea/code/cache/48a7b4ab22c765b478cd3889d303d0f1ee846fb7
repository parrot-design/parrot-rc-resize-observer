{"code":"import React, { useCallback, useRef, useEffect, useState } from 'react';\r\nimport { useForkRef, useDestory } from '@parrotjs/react-hooks';\r\nimport ResizeObserverPolyfill from 'resize-observer-polyfill';\r\nconst ResizeObserver = (props) => {\r\n    const { children, disabled, onResize } = props;\r\n    const childNode = useRef(null);\r\n    const resizeObserver = useRef(null);\r\n    const [rect, setRect] = useState({ width: 0, height: 0 });\r\n    const destroyObserver = useCallback(() => {\r\n        //clear observer\r\n        if (resizeObserver.current) {\r\n            resizeObserver.current.disconnect();\r\n            resizeObserver.current = null;\r\n        }\r\n    }, []);\r\n    const handleRef = useForkRef(childNode);\r\n    const handleResize = useCallback((entries) => {\r\n        const target = entries[0].target;\r\n        const { width, height } = target.getBoundingClientRect();\r\n        if (width !== rect.width ||\r\n            height !== rect.height) {\r\n            const size = { width, height };\r\n            setRect(size);\r\n            if (onResize) {\r\n                Promise.resolve().then(() => {\r\n                    onResize === null || onResize === void 0 ? void 0 : onResize({\r\n                        width,\r\n                        height\r\n                    }, target);\r\n                });\r\n            }\r\n        }\r\n    }, [onResize]);\r\n    const onComponentUpdated = useCallback(() => {\r\n        if (disabled) {\r\n            destroyObserver();\r\n            return;\r\n        }\r\n        if (!resizeObserver.current && childNode.current) {\r\n            resizeObserver.current = new ResizeObserverPolyfill(handleResize);\r\n            resizeObserver.current.observe(childNode.current);\r\n        }\r\n    }, [disabled, handleResize, destroyObserver]);\r\n    useEffect(() => {\r\n        onComponentUpdated();\r\n    }, [onComponentUpdated]);\r\n    useDestory(() => destroyObserver);\r\n    return React.cloneElement(children, {\r\n        ref: handleRef\r\n    });\r\n};\r\nexport default React.memo(ResizeObserver);\r\n//# sourceMappingURL=ResizeObserver.js.map","references":["/Users/wjb/Desktop/parrot-design/parrot-rc-resize-observer/node_modules/@types/react/index.d.ts","/Users/wjb/Desktop/parrot-design/parrot-rc-resize-observer/src/index.ts","/Users/wjb/Desktop/parrot-design/parrot-rc-resize-observer/node_modules/@parrotjs/react-hooks/dist/types/index.d.ts","/Users/wjb/Desktop/parrot-design/parrot-rc-resize-observer/node_modules/resize-observer-polyfill/src/index.d.ts"],"map":"{\"version\":3,\"file\":\"ResizeObserver.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/ResizeObserver.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAC,EAAE,WAAW,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEpE,OAAO,EAAE,UAAU,EAAC,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAE9D,MAAM,cAAc,GAAC,CAAC,KAA0B,EAAC,EAAE;IAE/C,MAAM,EACF,QAAQ,EACR,QAAQ,EACR,QAAQ,EACX,GAAC,KAAK,CAAC;IAER,MAAM,SAAS,GAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAE7B,MAAM,cAAc,GAAC,MAAM,CAAM,IAAI,CAAC,CAAC;IAEvC,MAAM,CAAE,IAAI,EAAC,OAAO,CAAE,GAAC,QAAQ,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC;IAEpD,MAAM,eAAe,GAAC,WAAW,CAAC,GAAE,EAAE;QAClC,gBAAgB;QAChB,IAAG,cAAc,CAAC,OAAO,EAAC;YACtB,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YACpC,cAAc,CAAC,OAAO,GAAC,IAAI,CAAC;SAC/B;IACL,CAAC,EAAC,EAAE,CAAC,CAAC;IAEN,MAAM,SAAS,GAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAEtC,MAAM,YAAY,GAAC,WAAW,CAAC,CAAC,OAAO,EAAC,EAAE;QAEtC,MAAM,MAAM,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE/B,MAAM,EAAE,KAAK,EAAC,MAAM,EAAE,GAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QAEtD,IACI,KAAK,KAAG,IAAI,CAAC,KAAK;YAClB,MAAM,KAAG,IAAI,CAAC,MAAM,EACvB;YACG,MAAM,IAAI,GAAC,EAAE,KAAK,EAAC,MAAM,EAAE,CAAC;YAC5B,OAAO,CAAC,IAAI,CAAC,CAAC;YAEd,IAAG,QAAQ,EAAC;gBACR,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;oBACvB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CACJ;wBACI,KAAK;wBACL,MAAM;qBACT,EACD,MAAM,CACT,CAAA;gBACL,CAAC,CAAC,CAAA;aACL;SACJ;IAEL,CAAC,EAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEd,MAAM,kBAAkB,GAAC,WAAW,CAChC,GAAG,EAAE;QACD,IAAG,QAAQ,EAAC;YACR,eAAe,EAAE,CAAC;YAClB,OAAQ;SACX;QACD,IAAG,CAAC,cAAc,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,EAAC;YAC5C,cAAc,CAAC,OAAO,GAAC,IAAI,sBAAsB,CAAC,YAAY,CAAC,CAAC;YAChE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACrD;IACL,CAAC,EACD,CAAC,QAAQ,EAAC,YAAY,EAAC,eAAe,CAAC,CAC1C,CAAC;IAEF,SAAS,CAAC,GAAE,EAAE;QACV,kBAAkB,EAAE,CAAC;IACzB,CAAC,EAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAExB,UAAU,CAAC,GAAE,EAAE,CAAA,eAAe,CAAC,CAAC;IAEhC,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAC;QAC/B,GAAG,EAAC,SAAS;KAChB,CAAC,CAAA;AACN,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA\"}","dts":{"name":"/Users/wjb/Desktop/parrot-design/parrot-rc-resize-observer/dist/types/ResizeObserver.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { IResizeObserverProps } from '.';\r\ndeclare const _default: React.MemoExoticComponent<(props: IResizeObserverProps) => React.FunctionComponentElement<{\r\n    ref: ((refValue: null) => void) | null;\r\n}>>;\r\nexport default _default;\r\n"}}
